AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  CW event and lambda trigger to remediate public S3


Parameters:
  RECEIVER:
    Description: ""
    Type: "String"
    Default: "email@email.com"

Resources:
  S3WatcherFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      FunctionName: "S3Watcher"
      Timeout: 10
      Role: !GetAtt S3WatcherFunctionRole.Arn
      Handler: app.lambda_handler
      Runtime: python3.8
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          SNS_TOPIC: !Ref S3WatcherSNSTopic

  S3WatcherRule:
    Type: AWS::Events::Rule
    Properties:
      Name: "S3WatcherRule"
      Description: ""
      State: "ENABLED"
      Targets:
        -
          Arn: !GetAtt S3WatcherFunction.Arn
          Id: "S3WatcherTargetFunction"
      EventPattern:
        source:
          - "aws.config"
        detail-type:
          - "Config Rules Compliance Change"
        detail:
          configRuleName:
            - "s3-bucket-public-write-prohibited"
            - "s3-bucket-public-read-prohibited"
          messageType:
            - "ComplianceChangeNotification"

  S3WatcherPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref S3WatcherFunction
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: !GetAtt S3WatcherRule.Arn

  S3WatcherFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "S3WatcherRole"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
                - "sts:AssumeRole"
      Policies:
        - PolicyName: "S3WatcherFunctionRolePolicyS3"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "s3:PutBucketPublicAccessBlock"
                Resource: "*"
        - PolicyName: "S3WatcherFunctionRolePolicyLogs"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogStream"
                  - "logs:CreateLogGroup"
                  - "logs:PutLogEvents"
                Resource:
                  - "arn:aws:logs:us-east-1:*"
        - PolicyName: "S3WatcherFunctionRolePolicySNS"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "sns:Publish"
                Resource: !Ref S3WatcherSNSTopic

  S3WatcherSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "S3Watcher"
      TopicName: "S3WatcherSNSTopic"

  S3WatcherSNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref RECEIVER
      TopicArn: !Ref S3WatcherSNSTopic
      Protocol: email

  S3WatcherTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref S3WatcherSNSTopic
      PolicyDocument:
        Statement:
          -
            Action: "sns:Publish"
            Effect: Allow
            Principal:
              Service: "lambda.amazonaws.com"
            Resource: !Ref S3WatcherSNSTopic

  S3WatcherWriteConfigRule:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: "s3-bucket-public-write-prohibited"
      Description: "Checks that your S3 buckets do not allow public write access. If an S3 bucket policy or bucket ACL allows public write access, the bucket is noncompliant."
      Scope:
        ComplianceResourceTypes:
          - "AWS::S3::Bucket"
      Source:
        Owner: "AWS"
        SourceIdentifier: "S3_BUCKET_PUBLIC_WRITE_PROHIBITED"

  S3WatcherReadConfigRule:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: "s3-bucket-public-read-prohibited"
      Description: "Checks that your S3 buckets do not allow public read access. If an S3 bucket policy or bucket ACL allows public read access, the bucket is noncompliant."
      Scope:
        ComplianceResourceTypes:
          - "AWS::S3::Bucket"
      Source:
        Owner: "AWS"
        SourceIdentifier: "S3_BUCKET_PUBLIC_READ_PROHIBITED"
